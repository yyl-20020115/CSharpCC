/* Generated By:JJTree: Do not edit this line. SimpleNode.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
namespace org.javacc.jjtree;

public class SimpleNode : Node
{
    protected Node parent;
    protected Node[] children;
    protected int id;
    protected Object value;
    protected JJTreeParser parser;

    public SimpleNode(int i) => id = i;

    public SimpleNode(JJTreeParser p, int i)
        : this(i) => parser = p;

    public virtual void jjtOpen()
    {
    }

    public virtual void jjtClose()
    {
    }

    public virtual void jjtSetParent(Node n) => parent = n;
    public virtual Node jjtGetParent() => parent;

    public virtual void jjtAddChild(Node n, int i)
    {
        if (children == null)
        {
            children = new Node[i + 1];
        }
        else if (i >= children.Length)
        {
            Node[] c = new Node[i + 1];
            Array.Copy(children, 0, c, 0, children.Length);
            children = c;
        }
        children[i] = n;
    }

    public virtual Node jjtGetChild(int i) => children[i];

    public virtual int jjtGetNumChildren() => (children == null) ? 0 : children.Length;

    public virtual void jjtSetValue(object value) => this.value = value;
    public virtual object jjtGetValue() => value;

    /** Accept the visitor. **/
    public virtual object jjtAccept(JJTreeParserVisitor visitor, object data) => visitor.Visit(this, data);

    /** Accept the visitor. **/
    public virtual object childrenAccept(JJTreeParserVisitor visitor, object data)
    {
        if (children != null)
        {
            for (int i = 0; i < children.Length; ++i)
            {
                children[i].jjtAccept(visitor, data);
            }
        }
        return data;
    }

    /* You can override these two methods in subclasses of SimpleNode to
       customize the way the node appears when the tree is dumped.  If
       your output uses more than one line you should override
       toString(String), otherwise overriding toString() is probably all
       you need to do. */

    public override string ToString() => JJTreeParserTreeConstants.jjtNodeName[id];
    public virtual string ToString(string prefix) => prefix + ToString();

    /* Override this method if you want to customize how the node dumps
       out its children. */

    public void Dump(string prefix)
    {
        Console.WriteLine(ToString(prefix));
        if (children != null)
        {
            for (int i = 0; i < children.Length; ++i)
            {
                var n = children[i] as SimpleNode;
                n?.Dump(prefix + " ");
            }
        }
    }
}

/* JavaCC - OriginalChecksum=99a3e52b6f5312e1769b84c1ea0356ad (do not edit this line) */
